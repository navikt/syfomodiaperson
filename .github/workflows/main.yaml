name: main

on: push

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/syfomodiaperson:${{ github.sha }}

jobs:
  build:
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        run: |
          npm install
      - name: Prettier check ðŸ’…
        run: |
          npx prettier --check .
      - name: Run unit tests
        run: |
          npm run test
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Docker compose
        run: docker-compose up -d
      - name: read environment file
        run: cat .env.template >>${GITHUB_ENV}
      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:8080/sykefravaer'
          headless: true
      - name: Upload screenshots if Cypress tests failed
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Security audit
        run: |
          npm run sec-audit
      - name: Build
        run: |
          npm run build
      - name: Prune
        run: |
          npm prune --production
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
          echo ${IMAGE}

  deploy-dev:
    if: github.ref == 'refs/heads/master'
    name: Deploy to NAIS Dev-fss
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: .nais/naiserator-dev.yaml

  deploy-prod:
    if: github.ref == 'refs/heads/master'
    name: Deploy to NAIS Prod-fss
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: .nais/naiserator-prod.yaml
